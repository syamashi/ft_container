test_set.cpp:186:15: error: expected expression
  points[0] = {2, 0};
              ^
test_set.cpp:187:15: error: expected expression
  points[1] = {1, 0};
              ^
test_set.cpp:188:15: error: expected expression
  points[2] = {3, 0};
              ^
test_set.cpp:669:12: error: expected expression
  z.insert({2, 5});
           ^
test_set.cpp:670:12: error: expected expression
  z.insert({3, 4});
           ^
test_set.cpp:671:12: error: expected expression
  z.insert({1, 1});
           ^
test_set.cpp:672:12: error: expected expression
  z.insert({1, -1});  // this fails because the magnitude of 1,-1 equals 1,1
           ^
7 errors generated.
In file included from test_stack.cpp:1:
In file included from ./tester.hpp:13:
In file included from ./../containers/map.hpp:4:
In file included from ./../containers/../utils/rb_tree.hpp:6:
In file included from ./../containers/stack.hpp:4:
./../containers/vector.hpp:48:9: error: delegating constructors are permitted only in C++11
      : vector(alloc) {
        ^~~~~~
test_stack.cpp:21:19: note: in instantiation of member function 'ft::vector<int, std::allocator<int> >::vector' requested here
  ft::vector<int> myvector(2, 200);  // vector with 2 elements
                  ^
1 error generated.
test_util.cpp:29:27: error: template argument uses local type 'my_enum' [-Werror,-Wlocal-type-template-args]
  cout << ft::is_integral<my_enum>::value << ":my_enum is not integral" << endl;
                          ^~~~~~~
In file included from test_util.cpp:1:
In file included from ./tester.hpp:13:
In file included from ./../containers/map.hpp:4:
In file included from ./../containers/../utils/rb_tree.hpp:6:
In file included from ./../containers/stack.hpp:4:
In file included from ./../containers/vector.hpp:9:
./../utils/util.hpp:143:54: error: template argument uses local type 'my_enum' [-Werror,-Wlocal-type-template-args]
    : public __is_integral_helper<typename remove_cv<T>::type>::type {};
                                                     ^
test_util.cpp:29:15: note: in instantiation of template class 'ft::is_integral<my_enum>' requested here
  cout << ft::is_integral<my_enum>::value << ":my_enum is not integral" << endl;
              ^
In file included from test_util.cpp:1:
In file included from ./tester.hpp:13:
In file included from ./../containers/map.hpp:4:
In file included from ./../containers/../utils/rb_tree.hpp:6:
In file included from ./../containers/stack.hpp:4:
In file included from ./../containers/vector.hpp:9:
./../utils/util.hpp:74:58: error: template argument uses local type 'my_enum' [-Werror,-Wlocal-type-template-args]
  typedef typename remove_const<typename remove_volatile<T>::type>::type type;
                                                         ^
./../utils/util.hpp:143:44: note: in instantiation of template class 'ft::remove_cv<my_enum>' requested here
    : public __is_integral_helper<typename remove_cv<T>::type>::type {};
                                           ^
test_util.cpp:29:15: note: in instantiation of template class 'ft::is_integral<my_enum>' requested here
  cout << ft::is_integral<my_enum>::value << ":my_enum is not integral" << endl;
              ^
In file included from test_util.cpp:1:
In file included from ./tester.hpp:13:
In file included from ./../containers/map.hpp:4:
In file included from ./../containers/../utils/rb_tree.hpp:6:
In file included from ./../containers/stack.hpp:4:
In file included from ./../containers/vector.hpp:9:
./../utils/util.hpp:74:33: error: template argument uses local type 'my_enum' [-Werror,-Wlocal-type-template-args]
  typedef typename remove_const<typename remove_volatile<T>::type>::type type;
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./../utils/util.hpp:143:35: error: template argument uses local type 'my_enum' [-Werror,-Wlocal-type-template-args]
    : public __is_integral_helper<typename remove_cv<T>::type>::type {};
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
test_util.cpp:29:15: note: in instantiation of template class 'ft::is_integral<my_enum>' requested here
  cout << ft::is_integral<my_enum>::value << ":my_enum is not integral" << endl;
              ^
5 errors generated.
test_vector.cpp:224:13: error: expected ';' at end of declaration
  RevIt r_it{it};
            ^
            ;
test_vector.cpp:231:14: error: expected ';' at end of declaration
  RevIt r_end{v.begin()};
             ^
             ;
test_vector.cpp:232:16: error: expected ';' at end of declaration
  RevIt r_begin{v.end()};
               ^
               ;
test_vector.cpp:247:15: error: alias declarations are a C++11 extension [-Werror,-Wc++11-extensions]
  using RI1 = ft::reverse_iterator<ft::vector<int>::iterator>;
              ^
test_vector.cpp:255:9: error: expected ';' at end of declaration
  RI1 r1{vi.rend() - 2};
        ^
        ;
test_vector.cpp:265:18: error: expected ';' in 'for' statement specifier
    for (size_t i{}; i != v.size(); ++i)
                 ^
test_vector.cpp:265:18: error: expected expression
test_vector.cpp:265:35: error: expected ')'
    for (size_t i{}; i != v.size(); ++i)
                                  ^
test_vector.cpp:265:9: note: to match this '('
    for (size_t i{}; i != v.size(); ++i)
        ^
test_vector.cpp:265:40: error: expected ';' after expression
    for (size_t i{}; i != v.size(); ++i)
                                       ^
                                       ;
test_vector.cpp:265:39: error: use of undeclared identifier 'i'
    for (size_t i{}; i != v.size(); ++i)
                                      ^
test_vector.cpp:265:40: error: expected expression
    for (size_t i{}; i != v.size(); ++i)
                                       ^
test_vector.cpp:277:54: error: expected '(' for function-style cast or type construction
      ft::reverse_iterator<ft::vector<int>::iterator>{v.rbegin()};
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
test_vector.cpp:318:56: error: expected ';' at end of declaration
    ft::reverse_iterator<ft::vector<int>::iterator> ri2{2 + ri1};
                                                       ^
                                                       ;
test_vector.cpp:497:17: error: expected expression
                [](const int n) { cout << n << ' '; });
                ^
test_vector.cpp:526:17: error: expected expression
                [](const int n) { cout << n << ' '; });
                ^
test_vector.cpp:754:3: error: use of undeclared identifier 'decltype'
  decltype(v1)::const_iterator it = v1.begin();
  ^
In file included from test_vector.cpp:1:
In file included from ./tester.hpp:13:
In file included from ./../containers/map.hpp:4:
In file included from ./../containers/../utils/rb_tree.hpp:6:
In file included from ./../containers/stack.hpp:4:
./../containers/vector.hpp:48:9: error: delegating constructors are permitted only in C++11
      : vector(alloc) {
        ^~~~~~
test_vector.cpp:27:19: note: in instantiation of member function 'ft::vector<int, std::allocator<int> >::vector' requested here
  ft::vector<int> v3(5, 123, alloc);
                  ^
In file included from test_vector.cpp:1:
In file included from ./tester.hpp:13:
In file included from ./../containers/map.hpp:4:
In file included from ./../containers/../utils/rb_tree.hpp:6:
In file included from ./../containers/stack.hpp:4:
./../containers/vector.hpp:427:53: error: too few arguments to function call, expected 2, have 1
  void construct(pointer ptr) { _alloc.construct(ptr); }
                                ~~~~~~~~~~~~~~~~    ^
./../containers/vector.hpp:382:9: note: in instantiation of member function 'ft::vector<int, std::allocator<int> >::construct' requested here
        construct(_last);
        ^
test_vector.cpp:98:5: note: in instantiation of member function 'ft::vector<int, std::allocator<int> >::resize' requested here
  V.resize(5);
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:144:7: note: 'construct' declared here
      void
      ^
In file included from test_vector.cpp:1:
In file included from ./tester.hpp:13:
In file included from ./../containers/map.hpp:4:
In file included from ./../containers/../utils/rb_tree.hpp:6:
In file included from ./../containers/stack.hpp:4:
./../containers/vector.hpp:56:9: error: delegating constructors are permitted only in C++11
      : vector(alloc) {
        ^~~~~~
test_vector.cpp:369:19: note: in instantiation of function template specialization 'ft::vector<int, std::allocator<int> >::vector<ft::random_access_iterator<int> >' requested here
  ft::vector<int> V2(V.begin(), V.end());
                  ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
make: *** [test0] Error 1
